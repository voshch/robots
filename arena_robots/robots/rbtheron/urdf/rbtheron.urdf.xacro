<?xml version="1.0"?>
<robot name="rb_theron"
	xmlns:xacro="http://www.ros.org/wiki/xacro">


	<!-- ***************** -->
	<!-- Imported elements -->
	<!-- ***************** -->

	<!-- First we import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->

	<!-- Import rbtheron macro -->
	<xacro:include filename="$(find arena_robots)/robots/rbtheron/urdf/bases/rbtheron/rbtheron_base.xacro"/>

    <xacro:include filename="$(find arena_robots)/robots/rbtheron/urdf/base_hw/rbtheron.ros2_control.urdf" />
	<xacro:include filename="$(find arena_robots)/robots/rbtheron/simulators/gazebo_classic/rbtheron/rbtheron_control.urdf.xacro"/>
	<xacro:include filename="$(find arena_robots)/robots/rbtheron/simulators/gazebo_ignition/rbtheron/rbtheron_control.urdf.xacro"/>

	<!-- Import all available sensors -->
	<xacro:include filename="$(find arena_robots)/robots/rbtheron/urdf/all_sensors.urdf.xacro" />

	<!-- ***************** -->
	<!-- Global parameters -->
	<!-- ***************** -->

	<!-- Second we define all the parameters and arguments to customize the robot characteristics -->

	<xacro:property name="PI" value="3.1415926535897931"/>

	<!-- Flag to select the high or low quality model -->
	<xacro:property name="hq" value="true" />

	<xacro:arg name="namespace" default="robot"/>
	<xacro:arg name="prefix" default="robot_"/>
	<xacro:arg name="gazebo_classic" default="false"/>
	<xacro:arg name="gazebo_ignition" default="false"/>

	<!-- Here we create the robot using the xacro:macro imported at the beggining of this file -->

	<xacro:rbtheron prefix="$(arg prefix)" hq="${hq}"/>

	<!-- SENSORS -->
    <xacro:property name="imu_offset_x" value="-0.1975"/>
    <xacro:property name="imu_offset_y" value="0.0"/>
    <xacro:property name="imu_offset_z" value="0.1598"/>

	<xacro:property name="front_rgbd_camera_offset_x" value="0.3045"/>
	<xacro:property name="front_rgbd_camera_offset_y" value="0.0"/>
	<xacro:property name="front_rgbd_camera_offset_z" value="0.1898"/>

	<xacro:property name="rear_rgbd_camera_offset_x" value="-0.3045"/>
	<xacro:property name="rear_rgbd_camera_offset_y" value="0.0"/>
	<xacro:property name="rear_rgbd_camera_offset_z" value="0.1158"/>

	<xacro:property name="front_laser_offset_x" value="0.2675"/>
	<xacro:property name="front_laser_offset_y" value="-0.215"/>
	<xacro:property name="front_laser_offset_z" value="0.1613"/>

	<xacro:property name="rear_laser_offset_x" value="-0.2675"/>
	<xacro:property name="rear_laser_offset_y" value="0.215"/>
	<xacro:property name="rear_laser_offset_z" value="0.1613"/>

	<!-- IMU -->
    <xacro:sensor_vectornav
        frame_prefix="$(arg prefix)vectornav_"
        parent="$(arg prefix)base_link"
        node_namespace="$(arg namespace)"
        gazebo_classic="$(arg gazebo_classic)"
        gazebo_ignition="$(arg gazebo_ignition)">
        <origin xyz="${imu_offset_x} ${imu_offset_y} ${imu_offset_z}" rpy="0 0 0"/>
    </xacro:sensor_vectornav>

	<!-- 2D LASER -->
    <xacro:sensor_hokuyo_ust20lx
        frame_prefix="$(arg prefix)front_laser_"
        parent="$(arg prefix)base_link"
        node_namespace="$(arg namespace)"
        node_name="front_laser"
        gazebo_classic="$(arg gazebo_classic)"
        gazebo_ignition="$(arg gazebo_ignition)">
        <origin xyz="${front_laser_offset_x} ${front_laser_offset_y} ${front_laser_offset_z}" rpy="0 ${-PI} ${3/4*PI}"/>
    </xacro:sensor_hokuyo_ust20lx>
    <xacro:sensor_hokuyo_ust20lx
        frame_prefix="$(arg prefix)rear_laser_"
        parent="$(arg prefix)base_link"
        node_namespace="$(arg namespace)"
        node_name="rear_laser"
        gazebo_classic="$(arg gazebo_classic)"
        gazebo_ignition="$(arg gazebo_ignition)">
        <origin xyz="${rear_laser_offset_x} ${rear_laser_offset_y} ${rear_laser_offset_z}" rpy="0 ${-PI} ${-1/4*PI}"/>
    </xacro:sensor_hokuyo_ust20lx>

  	<!-- CAMERAS -->
    <xacro:sensor_intel_realsense_d435
        frame_prefix="$(arg prefix)front_rgbd_camera_"
        parent="$(arg prefix)base_link"
        node_namespace="$(arg namespace)"
        node_name="front_camera"
        gazebo_classic="$(arg gazebo_classic)"
        gazebo_ignition="$(arg gazebo_ignition)">
        <origin xyz="${front_rgbd_camera_offset_x} ${front_rgbd_camera_offset_y} ${front_rgbd_camera_offset_z}" rpy="0 0 0"/>
    </xacro:sensor_intel_realsense_d435>

    <xacro:sensor_intel_realsense_d435
        frame_prefix="$(arg prefix)rear_rgbd_camera_"
        parent="$(arg prefix)base_link"
        node_namespace="$(arg namespace)"
        node_name="rear_camera"
        gazebo_classic="$(arg gazebo_classic)"
        gazebo_ignition="$(arg gazebo_ignition)">
        <origin xyz="${rear_rgbd_camera_offset_x} ${rear_rgbd_camera_offset_y} ${rear_rgbd_camera_offset_z}" rpy="0 0 ${PI}"/>
    </xacro:sensor_intel_realsense_d435>

	<!-- Controllers -->
	<xacro:if value="$(arg gazebo_classic)">
		<xacro:rbtheron_gz_classic_control namespace="$(arg namespace)" prefix="$(arg prefix)"/>
        <xacro:ros_planar_move_gazebo_classic/>
	</xacro:if>
	<xacro:if value="$(arg gazebo_ignition)">
		<xacro:rbtheron_gz_ignition_control namespace="$(arg namespace)" prefix="$(arg prefix)"/>
	</xacro:if>
    <xacro:unless value="$(arg gazebo_classic)">
        <xacro:unless value="$(arg gazebo_ignition)">
            <xacro:rbtheron_base_hw_controller/>
        </xacro:unless>
    </xacro:unless>

    <gazebo>
        <plugin
        filename="gz-sim-pose-publisher-system"
        name="gz::sim::systems::PosePublisher">
        <publish_model_pose>true</publish_model_pose>
        <publish_link_pose>false</publish_link_pose>
        <publish_collision_pose>false</publish_collision_pose>
        <publish_visual_pose>false</publish_visual_pose>
        <publish_sensor_pose>false</publish_sensor_pose>
        <publish_nested_model_pose>true</publish_nested_model_pose>
        <use_pose_vector_msg>false</use_pose_vector_msg>
        </plugin>
    </gazebo>
</robot>
