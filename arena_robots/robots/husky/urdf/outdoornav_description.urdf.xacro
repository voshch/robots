<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="outdoornav_sensors">
  <xacro:macro name="outdoornav_sensors" params="outdoornav_configuration">

    <xacro:arg name="jackal_front_fender"      default="$(optenv JACKAL_FRONT_ACCESSORY_FENDER false)" />
    <xacro:arg name="jackal_rear_fender"       default="$(optenv JACKAL_REAR_ACCESSORY_FENDER false)" />

    <xacro:arg name="starter_kit_xyz"          default="$(optenv STARTER_KIT_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="starter_kit_rpy"          default="$(optenv STARTER_KIT_RPY 0.0 0.0 0.0)" />

    <xacro:arg name="swiftnav_position_enable" default="$(optenv SWIFTNAV_ENABLE_DRIVER false)" />
    <xacro:arg name="swiftnav_position_xyz"    default="$(optenv SWIFTNAV_POSITION_GPS_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="swiftnav_position_rpy"    default="$(optenv SWIFTNAV_POSITION_GPS_RPY 0.0 0.0 0.0)" />

    <xacro:arg name="swiftnav_heading_enable"  default="$(optenv SWIFTNAV_ENABLE_DRIVER false)" />
    <xacro:arg name="swiftnav_heading_xyz"     default="$(optenv SWIFTNAV_HEADING_GPS_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="swiftnav_heading_rpy"     default="$(optenv SWIFTNAV_HEADING_GPS_RPY 0.0 0.0 0.0)" />

    <xacro:arg name="ublox_enable"             default="$(optenv UBLOX_ENABLE_DRIVER false)" />
    <xacro:arg name="ublox_xyz"                default="$(optenv UBLOX_POSITION_GPS_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="ublox_rpy"                default="$(optenv UBLOX_POSITION_GPS_RPY 0.0 0.0 0.0)" />

    <xacro:arg name="microstrain_enable"       default="$(optenv MICROSTRAIN_ENABLE_DRIVER false)" />
    <xacro:arg name="microstrain_gnss_enable"  default="$(optenv MICROSTRAIN_ENABLE_GNSS false )" />
    <xacro:arg name="microstrain_xyz"          default="$(optenv MICROSTRAIN_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="microstrain_rpy"          default="$(optenv MICROSTRAIN_RPY 0.0 0.0 0.0)" />
    <xacro:arg name="microstrain_gnss1_xyz"    default="$(optenv MICROSTRAIN_GNSS1_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="microstrain_gnss1_rpy"    default="$(optenv MICROSTRAIN_GNSS1_RPY 0.0 0.0 0.0)" />
    <xacro:arg name="microstrain_gnss2_xyz"    default="$(optenv MICROSTRAIN_GNSS2_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="microstrain_gnss2_rpy"    default="$(optenv MICROSTRAIN_GNSS2_RPY 0.0 0.0 0.0)" />

    <xacro:arg name="xsens_enable"             default="$(optenv XSENS_ENABLE_DRIVER false)" />
    <xacro:arg name="xsens_xyz"                default="$(optenv XSENS_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="xsens_rpy"                default="$(optenv XSENS_RPY 0.0 0.0 0.0)" />

    <xacro:arg name="phidget_spatial_enable"   default="$(optenv PHIDGET_ENABLE_DRIVER false)" />
    <xacro:arg name="phidget_spatial_xyz"      default="$(optenv PHIDGET_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="phidget_spatial_rpy"      default="$(optenv PHIDGET_RPY 0.0 0.0 0.0)" />

    <xacro:arg name="lms1xx_enable"            default="$(optenv LMS1XX_ENABLE_DRIVER false)" />
    <xacro:arg name="lms1xx_xyz"               default="$(optenv LMS1XX_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="lms1xx_rpy"               default="$(optenv LMS1XX_RPY 0.0 0.0 0.0)" />
    <xacro:arg name="lms1xx_num"               default="$(optenv LMS1XX_NUM 0)" />

    <xacro:arg name="rear_lms1xx_enable"       default="$(optenv REAR_LMS1XX_ENABLE_DRIVER false)" />
    <xacro:arg name="rear_lms1xx_xyz"          default="$(optenv REAR_LMS1XX_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="rear_lms1xx_rpy"          default="$(optenv REAR_LMS1XX_RPY 0.0 0.0 0.0)" />
    <xacro:arg name="rear_lms1xx_num"          default="$(optenv REAR_LMS1XX_NUM 0)" />

    <xacro:arg name="hokuyo_enable"            default="$(optenv HOKUYO_ENABLE_DRIVER false)" />
    <xacro:arg name="hokuyo_xyz"               default="$(optenv HOKUYO_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="hokuyo_rpy"               default="$(optenv HOKUYO_RPY 0.0 0.0 0.0)" />
    <xacro:arg name="hokuyo_num"               default="$(optenv HOKUYO_NUM 0)" />

    <xacro:arg name="rear_hokuyo_enable"       default="$(optenv REAR_HOKUYO_ENABLE_DRIVER false)" />
    <xacro:arg name="rear_hokuyo_xyz"          default="$(optenv REAR_HOKUYO_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="rear_hokuyo_rpy"          default="$(optenv REAR_HOKUYO_RPY 0.0 0.0 0.0)" />
    <xacro:arg name="rear_hokuyo_num"          default="$(optenv REAR_HOKUYO_NUM 0)" />

    <xacro:arg name="outdoorscan_enable"       default="$(optenv OUTDOORSCAN_ENABLE_DRIVER false)" />
    <xacro:arg name="outdoorscan_xyz"          default="$(optenv OUTDOORSCAN_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="outdoorscan_rpy"          default="$(optenv OUTDOORSCAN_RPY 0.0 0.0 0.0)" />

    <xacro:arg name="rear_outdoorscan_enable"  default="$(optenv REAR_OUTDOORSCAN_ENABLE_DRIVER false)" />
    <xacro:arg name="rear_outdoorscan_xyz"     default="$(optenv REAR_OUTDOORSCAN_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="rear_outdoorscan_rpy"     default="$(optenv REAR_OUTDOORSCAN_RPY 0.0 0.0 0.0)" />

    <xacro:arg name="vlp_enable"               default="$(optenv VLP_ENABLE_DRIVER false)" />
    <xacro:arg name="vlp_xyz"                  default="$(optenv VLP_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="vlp_rpy"                  default="$(optenv VLP_RPY 0.0 0.0 0.0)" />
    <xacro:arg name="vlp_num"                  default="$(optenv VLP_LIDAR_NUM 0)" />

    <xacro:arg name="rear_vlp_enable"          default="$(optenv REAR_VLP_ENABLE_DRIVER false)" />
    <xacro:arg name="rear_vlp_xyz"             default="$(optenv REAR_VLP_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="rear_vlp_rpy"             default="$(optenv REAR_VLP_RPY 0.0 0.0 0.0)" />

    <xacro:arg name="hesai_enable"             default="$(optenv HESAI_ENABLE_DRIVER false)" />
    <xacro:arg name="hesai_xyz"                default="$(optenv HESAI_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="hesai_rpy"                default="$(optenv HESAI_RPY 0.0 0.0 0.0)" />
    <xacro:arg name="hesai_num"                default="$(optenv HESAI_NUM 0)" />

    <xacro:arg name="ouster_enable"            default="$(optenv OUSTER_ENABLE_DRIVER false)" />
    <xacro:arg name="ouster_xyz"               default="$(optenv OUSTER_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="ouster_rpy"               default="$(optenv OUSTER_RPY 0.0 0.0 0.0)" />
    <xacro:arg name="ouster_lidar_num"         default="$(optenv OUSTER_LIDAR_NUM 0)" />
    <xacro:arg name="ouster_imu_num"           default="$(optenv OUSTER_IMU_NUM 0)" />

    <xacro:arg name="d435_enable"              default="$(optenv D435_ENABLE_DRIVER false)" />
    <xacro:arg name="d435_xyz"                 default="$(optenv D435_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="d435_rpy"                 default="$(optenv D435_RPY 0.0 0.0 0.0)" />
    <xacro:arg name="d435_num"                 default="$(optenv D435_NUM 0)" />

    <xacro:arg name="rear_d435_enable"         default="$(optenv REAR_D435_ENABLE_DRIVER false)" />
    <xacro:arg name="rear_d435_xyz"            default="$(optenv REAR_D435_XYZ 0.0 0.0 0.0)" />
    <xacro:arg name="rear_d435_rpy"            default="$(optenv REAR_D435_RPY 0.0 0.0 0.0)" />
    <xacro:arg name="rear_d435_num"            default="$(optenv REAR_D435_NUM 1)" />

    <xacro:arg name="axis_ptz_enable"          default="$(optenv AXIS_PTZ_ENABLE_DRIVER false)" />
    <xacro:arg name="axis_ptz_num"             default="$(optenv AXIS_PTZ_NUM 0)" />
    <xacro:arg name="axis_ptz_xyz"             default="$(optenv AXIS_PTZ_XYZ 0 0 0)" />
    <xacro:arg name="axis_ptz_rpy"             default="$(optenv AXIS_PTZ_RPY 0 0 0)" />

    <xacro:arg name="rear_axis_ptz_enable"     default="$(optenv REAR_AXIS_PTZ_ENABLE_DRIVER false)" />
    <xacro:arg name="rear_axis_ptz_num"        default="$(optenv REAR_AXIS_PTZ_NUM 0)" />
    <xacro:arg name="rear_axis_ptz_xyz"        default="$(optenv REAR_AXIS_PTZ_XYZ 0 0 0)" />
    <xacro:arg name="rear_axis_ptz_rpy"        default="$(optenv REAR_AXIS_PTZ_RPY 0 0 0)" />

    <xacro:arg name="axis_q62_enable"          default="$(optenv AXIS_PTZ_Q62_ENABLE_DRIVER false)" />
    <xacro:arg name="axis_q62_num"             default="$(optenv AXIS_Q62_NUM 0)" />
    <xacro:arg name="axis_q62_xyz"             default="$(optenv AXIS_Q62_XYZ 0 0 0)" />
    <xacro:arg name="axis_q62_rpy"             default="$(optenv AXIS_Q62_RPY 0 0 0)" />

    <xacro:arg name="xvn_enable"               default="$(optenv XVN_ENABLE_DRIVER false)" />
    <xacro:arg name="xvn_xyz"                  default="$(optenv XVN_XYZ 0 0 0)" />
    <xacro:arg name="xvn_rpy"                  default="$(optenv XVN_RPY 0 0 0)" />
    <xacro:arg name="xvn_gnss1_xyz"            default="$(optenv XVN_GNSS1_XYZ 0 0 0)" />
    <xacro:arg name="xvn_gnss1_rpy"            default="$(optenv XVN_GNSS1_RPY 0 0 0)" />
    <xacro:arg name="xvn_gnss2_xyz"            default="$(optenv XVN_GNSS2_XYZ 0 0 0)" />
    <xacro:arg name="xvn_gnss2_rpy"            default="$(optenv XVN_GNSS2_RPY 0 0 0)" />

    <xacro:arg name="onav_urdf_extras"         default="$(optenv OUTDOORNAV_URDF_EXTRAS empty.urdf)" />

    <xacro:arg name="enable_docking"           default="$(optenv OUTDOORNAV_ENABLE_DOCKING false)" />
    <xacro:arg name="charge_receiver_xyz"      default="$(optenv CHARGE_RECEIVER_XYZ 0.0 0.0 0.0)" />

    <!-- Starter Kit -->
    <xacro:if value="${outdoornav_configuration == 'starter'}">
      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/starter_kit.urdf.xacro" />
      <xacro:starter_kit
        name="starter_kit"
        parent="base_link"
        starter_kit_xyz="$(arg starter_kit_xyz)"
        starter_kit_rpy="$(arg starter_kit_rpy)"
        ublox_xyz="$(arg ublox_xyz)"
        ublox_rpy="$(arg ublox_rpy)"
        phidget_spatial_xyz="$(arg phidget_spatial_xyz)"
        phidget_spatial_rpy="$(arg phidget_spatial_rpy)"
        d435_xyz="$(arg d435_xyz)"
        d435_rpy="$(arg d435_rpy)"
        rear_d435_xyz="$(arg rear_d435_xyz)"
        rear_d435_rpy="$(arg rear_d435_rpy)" >
      </xacro:starter_kit>
    </xacro:if>

    <!-- Standard Kit -->
    <xacro:if value="${outdoornav_configuration == 'standard'}">
      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/standard_kit.urdf.xacro" />
      <xacro:standard_kit
        swiftnav_position_xyz="$(arg swiftnav_position_xyz)"
        swiftnav_heading_xyz="$(arg swiftnav_heading_xyz)"
        microstrain_xyz="$(arg microstrain_xyz)"
        microstrain_rpy="$(arg microstrain_rpy)"
        vlp_xyz="$(arg vlp_xyz)"
        vlp_rpy="$(arg vlp_rpy)"
        vlp_num="$(arg vlp_num)" >
      </xacro:standard_kit>
    </xacro:if>

    <!-- Husky Observer configuration -->
    <xacro:if value="${outdoornav_configuration == 'observer'}">
      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/VLP-16.urdf.xacro"/>
      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/accessories/hokuyo_ust10.urdf.xacro" />
      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/accessories/sick_lms1xx_mount.urdf.xacro"/>
      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/_d435.urdf.xacro" />
      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/accessories/d435_gazebo.urdf.xacro" />

      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/accessories/gnss_antenna.urdf.xacro" />

      <!-- Main backpack shell & mast assembly -->
      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/husky_observer.urdf.xacro" />

      <!-- Position GPS (Duro) -->
      <xacro:gnss_antenna name="gps_position" parent="base_link" gps_num="0">
        <origin xyz="$(arg swiftnav_position_xyz)" rpy="$(arg swiftnav_position_rpy)"/>
      </xacro:gnss_antenna>

      <!-- Heading GPS -->
      <xacro:gnss_antenna name="gps_heading" parent="base_link" gps_num="1">
        <origin xyz="$(arg swiftnav_heading_xyz)" rpy="$(arg swiftnav_heading_rpy)"/>
      </xacro:gnss_antenna>

      <!-- Microstrain Link -->
      <link name="microstrain_link"/>
      <joint name="microstrain_to_base" type="fixed">
        <parent link="base_link" />
        <child link="microstrain_link" />
        <origin xyz="$(arg microstrain_xyz)" rpy="$(arg microstrain_rpy)"/>
      </joint>

      <!--
          Velodyne VLP-16 in the tower
          The 3D lidar can be a CPU hog, especially in Docker where GPU support can't be used. Therefore we expose
          a lot of the low-level lidar parameters so we can fine-tune the lidar's performance if needed

          Settings that are different from the VLP-16 defaults are noted with a comment. Other settings are unchanged.
        -->
      <xacro:property name="vertical_scan_min_h_angle" value="$(optenv CPR_SIMULATION_3D_LIDAR_MIN_H_ANGLE -3.1415926535897931)" />
      <xacro:property name="vertical_scan_max_h_angle" value="$(optenv CPR_SIMULATION_3D_LIDAR_MAX_H_ANGLE  3.1415926535897931)" />
      <xacro:property name="vertical_scan_min_v_angle" value="$(optenv CPR_SIMULATION_3D_LIDAR_MIN_V_ANGLE -0.2617993877991494)" />
      <xacro:property name="vertical_scan_max_v_angle" value="$(optenv CPR_SIMULATION_3D_LIDAR_MAX_V_ANGLE  0.2617993877991494)" />
      <xacro:property name="num_samples"               value="$(optenv CPR_SIMULATION_3D_LIDAR_SAMPLES      720)" />  <!-- VLP-16 default: 1875 -->
      <xacro:property name="num_rings"                 value="$(optenv CPR_SIMULATION_3D_LIDAR_RINGS        8)" />    <!-- VLP-16 default: 16 -->
      <xacro:property name="resolution"                value="$(optenv CPR_SIMULATION_3D_LIDAR_RESOLUTION   0.01)" /> <!-- VLP-16 default: 0.001 -->
      <xacro:property name="lidar_hz"                  value="$(optenv CPR_SIMULATION_3D_LIDAR_HZ           5)" />    <!-- VLP-16 default: 10 -->
      <xacro:property name="enable_gpu"                value="$(optenv CPR_SIMULATION_3D_LIDAR_ENABLE_GPU   false)" />
      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/accessories/3d_lidar.urdf.xacro" />
      <xacro:if value="$(optenv CPR_SIMULATION_ENABLE_3D_LIDAR 1)">
        <xacro:custom_velodyne name="velodyne" parent="base_link" topic="/sensors/lidar_$(arg vlp_num)/pointcloud"
                               min_v_angle="${vertical_scan_min_v_angle}"
                               max_v_angle="${vertical_scan_max_v_angle}"
                               min_h_angle="${vertical_scan_min_h_angle}"
                               max_h_angle="${vertical_scan_max_h_angle}"
                               resolution="${resolution}"
                               hz="${lidar_hz}"
                               lasers="${num_rings}"
                               samples="${num_samples}"
                               gpu="${enable_gpu}">
          <origin xyz="$(arg vlp_xyz)" rpy="$(arg vlp_rpy)" />
        </xacro:custom_velodyne>
      </xacro:if>

      <!-- 2D LiDAR(s) Link -->
      <xacro:hokuyo_ust10_mount prefix="front" parent_link="base_link" topic="/sensors/lidar_$(arg hokuyo_num)/scan">
          <origin xyz="$(arg hokuyo_xyz)" rpy="$(arg hokuyo_rpy)" />
      </xacro:hokuyo_ust10_mount>
      <xacro:if value="$(arg rear_hokuyo_enable)">
        <xacro:hokuyo_ust10_mount prefix="rear" parent_link="base_link" topic="/sensors/lidar_$(arg rear_hokuyo_num)/scan">
            <origin xyz="$(arg rear_hokuyo_xyz)" rpy="$(arg rear_hokuyo_rpy)" />
        </xacro:hokuyo_ust10_mount>
      </xacro:if>

      <!-- Realsense D435 Link -->
      <xacro:sensor_d435 name="front_d435" parent="base_link" use_mesh="true">
        <origin xyz="$(arg d435_xyz)" rpy="$(arg d435_rpy)"/>
      </xacro:sensor_d435>
      <xacro:d435_gazebo name="front_d435" topic_n="$(arg d435_num)" />

      <xacro:sensor_d435 name="rear_d435" parent="base_link" use_mesh="true">
        <origin xyz="$(arg rear_d435_xyz)" rpy="$(arg rear_d435_rpy)"/>
      </xacro:sensor_d435>
      <xacro:d435_gazebo name="rear_d435" topic_n="$(arg rear_d435_num)" />

      <!-- Axis Q62 PTZ camera -->
      <xacro:axis_q62 prefix="camera_$(arg axis_q62_num)" parent="base_link" topic="/sensors/camera_$(arg axis_q62_num)/image_raw">
        <origin xyz="$(arg axis_q62_xyz)" rpy="$(arg axis_q62_rpy)" />
      </xacro:axis_q62>
    </xacro:if>

    <!-- Custom configuration -->
    <xacro:if value="${outdoornav_configuration == 'custom' or outdoornav_configuration == 'teleop'}">
      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/VLP-16.urdf.xacro"/>
      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/OS1-32.urdf.xacro"/>
      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/accessories/hokuyo_ust10.urdf.xacro" />
      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/accessories/sick_lms1xx_mount.urdf.xacro"/>
      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/_d435.urdf.xacro" />
      <xacro:include filename="$(find arena_robots)/robots/husky/urdf/accessories/d435_gazebo.urdf.xacro" />



      <!-- Position GPS (Duro) -->
      <xacro:if value="$(arg swiftnav_position_enable)">
        <link name="gps_position_link"/>
        <joint name="gps_position_to_base" type="fixed">
          <parent link="base_link" />
          <child link="gps_position_link" />
          <origin xyz="$(arg swiftnav_position_xyz)" rpy="$(arg swiftnav_position_rpy)"/>
        </joint>
      </xacro:if>

      <!-- Heading GPS -->
      <xacro:if value="$(arg swiftnav_heading_enable)">
        <link name="gps_heading_link"/>
        <joint name="gps_heading_to_base" type="fixed">
          <parent link="base_link" />
          <child link="gps_heading_link" />
          <origin xyz="$(arg swiftnav_heading_xyz)" rpy="$(arg swiftnav_heading_rpy)"/>
        </joint>
      </xacro:if>

      <!-- Position GPS (Ublox) -->
      <xacro:if value="$(arg ublox_enable)">
        <link name="gps_position_link"/>
        <joint name="gps_position_to_base" type="fixed">
          <parent link="base_link" />
          <child link="gps_position_link" />
          <origin xyz="$(arg ublox_xyz)" rpy="$(arg ublox_rpy)"/>
        </joint>
      </xacro:if>

      <xacro:if value="$(arg xvn_enable)">
        <material name="silver"> <color rgba="${192/255} ${192/255} ${192/255} 1.0"/> </material>
        <link name="xvn_link">
          <visual>
            <geometry>
              <mesh filename="package://arena_robots/robots/husky/meshes/xvn.stl" scale="0.001 0.001 0.001" />
            </geometry>
            <material name="silver" />
            <origin xyz="0 0 0" rpy="0 0 0" />
          </visual>
          <collision>
            <geometry>
              <mesh filename="package://arena_robots/robots/husky/meshes/xvn.stl" scale="0.001 0.001 0.001" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0 " />
          </collision>
        </link>
        <joint name="xvn_to_base" type="fixed">
          <parent link="base_link" />
          <child link="xvn_link" />
          <origin xyz="$(arg xvn_xyz)" rpy="$(arg xvn_rpy)"/>
        </joint>

        <link name="gps_position_link"/>
        <joint name="xvn_gnss1_base" type="fixed">
          <parent link="base_link" />
          <child link="gps_position_link" />
          <origin xyz="$(arg xvn_gnss1_xyz)" rpy="$(arg xvn_gnss1_rpy)"/>
        </joint>

        <link name="gps_heading_link"/>
        <joint name="xvn_gnss2_base" type="fixed">
          <parent link="base_link" />
          <child link="gps_heading_link" />
          <origin xyz="$(arg xvn_gnss2_xyz)" rpy="$(arg xvn_gnss2_rpy)"/>
        </joint>
      </xacro:if>

      <!-- Microstrain Link -->
      <xacro:if value="$(arg microstrain_enable)">
        <link name="microstrain_link"/>
        <joint name="microstrain_to_base" type="fixed">
          <parent link="base_link" />
          <child link="microstrain_link" />
          <origin xyz="$(arg microstrain_xyz)" rpy="$(arg microstrain_rpy)"/>
        </joint>

        <xacro:if value="$(arg microstrain_gnss_enable)">
          <link name="gps_position_link"/>
          <joint name="gnss1_to_microstrain" type="fixed">
            <parent link="microstrain_link" />
            <child link="gps_position_link" />
            <origin xyz="$(arg microstrain_gnss1_xyz)" rpy="$(arg microstrain_gnss1_rpy)"/>
          </joint>
          <link name="gps_heading_link"/>
          <joint name="gnss2_to_microstrain" type="fixed">
            <parent link="microstrain_link" />
            <child link="gps_heading_link" />
            <origin xyz="$(arg microstrain_gnss2_xyz)" rpy="$(arg microstrain_gnss2_rpy)"/>
          </joint>
        </xacro:if>
      </xacro:if>

      <!-- Xsens Link -->
      <xacro:if value="$(arg xsens_enable)">
        <link name="xsens_link"/>
        <joint name="xsens_to_base" type="fixed">
          <parent link="base_link" />
          <child link="xsens_link" />
          <origin xyz="$(arg xsens_xyz)" rpy="$(arg xsens_rpy)"/>
        </joint>
      </xacro:if>

      <!-- Velodyne Link -->
      <xacro:if value="$(arg vlp_enable)">
        <xacro:VLP-16 name="velodyne" parent="base_link" topic="/sensors/lidar_$(arg vlp_num)/pointcloud">
          <origin xyz="$(arg vlp_xyz)" rpy="$(arg vlp_rpy)" />
        </xacro:VLP-16>
      </xacro:if>

      <!-- Rear Velodyne Link -->
      <xacro:if value="$(arg rear_vlp_enable)">
        <xacro:VLP-16 name="rear_velodyne" parent="base_link" topic="/sensors/lidar_$(arg vlp_num)/pointcloud">
          <origin xyz="$(arg rear_vlp_xyz)" rpy="$(arg rear_vlp_rpy)" />
        </xacro:VLP-16>
      </xacro:if>

      <!-- Hesai Link -->
      <xacro:if value="$(arg hesai_enable)">
        <link name="hesai_lidar"/>
        <joint name="hesai_to_base" type="fixed">
          <parent link="base_link" />
          <child link="hesai_lidar" />
          <origin xyz="$(arg hesai_xyz)" rpy="$(arg hesai_rpy)"/>
        </joint>
      </xacro:if>

      <!-- Ouster Link -->
      <xacro:if value="$(arg ouster_enable)">
        <xacro:OS1-32 name="os_sensor" parent="base_link" topic_points="/sensors/lidar_$(arg ouster_lidar_num)/pointcloud" topic_imu="/sensors/imu_$(arg ouster_imu_num)/data">
          <origin xyz="$(arg ouster_xyz)" rpy="$(arg ouster_rpy)" />
        </xacro:OS1-32>
      </xacro:if>

      <!-- 2D LiDAR Link(s) -->
      <xacro:if value="$(arg lms1xx_enable)">
        <xacro:sick_lms1xx_mount prefix="front" parent="base_link" topic="/sensors/lidar_$(arg lms1xx_num)/scan" tower="0" robot_namespace="/">
          <origin xyz="$(arg lms1xx_xyz)" rpy="$(arg lms1xx_rpy)"/>
        </xacro:sick_lms1xx_mount>
      </xacro:if>

      <xacro:if value="$(arg hokuyo_enable)">
        <xacro:hokuyo_ust10_mount prefix="front" parent_link="base_link" topic="/sensors/lidar_$(arg hokuyo_num)/scan">
          <origin xyz="$(arg hokuyo_xyz)" rpy="$(arg hokuyo_rpy)" />
        </xacro:hokuyo_ust10_mount>
      </xacro:if>

      <xacro:if value="$(arg outdoorscan_enable)">
        <link name="front_laser"/>
        <joint name="front_laser_to_base" type="fixed">
          <parent link="base_link" />
          <child link="front_laser" />
          <origin xyz="$(arg outdoorscan_xyz)" rpy="$(arg outdoorscan_rpy)"/>
        </joint>
      </xacro:if>

      <!-- Rear 2D LiDAR(s) Link -->
      <xacro:if value="$(arg rear_lms1xx_enable)">
        <xacro:sick_lms1xx_mount prefix="rear" parent="base_link" topic="/sensors/lidar_$(arg rear_lms1xx_num)/scan" tower="0" robot_namespace="/">
          <origin xyz="$(arg rear_lms1xx_xyz)" rpy="$(arg rear_lms1xx_rpy)"/>
        </xacro:sick_lms1xx_mount>
      </xacro:if>

      <xacro:if value="$(arg rear_hokuyo_enable)">
        <xacro:hokuyo_ust10_mount prefix="rear" parent_link="base_link" topic="/sensors/lidar_$(arg rear_hokuyo_num)/scan">
          <origin xyz="$(arg rear_hokuyo_xyz)" rpy="$(arg rear_hokuyo_rpy)" />
        </xacro:hokuyo_ust10_mount>
      </xacro:if>

      <xacro:if value="$(arg rear_outdoorscan_enable)">
        <link name="rear_laser"/>
        <joint name="rear_laser_to_base" type="fixed">
          <parent link="base_link" />
          <child link="rear_laser" />
          <origin xyz="$(arg rear_outdoorscan_xyz)" rpy="$(arg rear_outdoorscan_rpy)"/>
        </joint>
      </xacro:if>

      <!-- Realsense D435 Link -->
      <xacro:if value="$(arg d435_enable)">
        <xacro:sensor_d435 name="front_d435" parent="base_link" use_mesh="true">
          <origin xyz="$(arg d435_xyz)" rpy="$(arg d435_rpy)"/>
        </xacro:sensor_d435>
        <xacro:d435_gazebo name="front_d435" topic_n="$(arg d435_num)" />
      </xacro:if>

      <xacro:if value="$(arg rear_d435_enable)">
        <xacro:sensor_d435 name="rear_d435" parent="base_link" use_mesh="true">
          <origin xyz="$(arg rear_d435_xyz)" rpy="$(arg rear_d435_rpy)"/>
        </xacro:sensor_d435>
        <xacro:d435_gazebo name="rear_d435" topic_n="$(arg rear_d435_num)" />
      </xacro:if>

      <!-- Axis PTZ camera -->
      <xacro:if value="$(arg axis_ptz_enable)">
        <xacro:axis_dome_ptz prefix="camera_$(arg axis_ptz_num)" parent="base_link" topic="/sensors/camera_$(arg axis_ptz_num)/image_raw">
          <origin xyz="$(arg axis_ptz_xyz)" rpy="$(arg axis_ptz_rpy)"/>
        </xacro:axis_dome_ptz>
      </xacro:if>

      <!-- Rear Axis PTZ camera -->
      <xacro:if value="$(arg rear_axis_ptz_enable)">
        <xacro:axis_dome_ptz prefix="camera_$(arg rear_axis_ptz_num)" parent="base_link" topic="/sensors/camera_$(arg rear_axis_ptz_num)/image_raw">
          <origin xyz="$(arg rear_axis_ptz_xyz)" rpy="$(arg rear_axis_ptz_rpy)"/>
        </xacro:axis_dome_ptz>
      </xacro:if>

      <!-- Axis Q62 PTZ camera -->
      <xacro:if value="$(arg axis_q62_enable)">
        <xacro:axis_q62 prefix="camera_$(arg axis_q62_num)" parent="base_link" topic="/sensors/camera_$(arg axis_q62_num)/image_raw">
          <origin xyz="$(arg axis_q62_xyz)" rpy="$(arg axis_q62_rpy)" />
        </xacro:axis_q62>
      </xacro:if>

      <!-- Optional for OEM platforms or additional sensors customers want to use as inputs to OutdoorNav -->
      <xacro:include filename="$(arg onav_urdf_extras)" />

    </xacro:if>

    <xacro:if value="$(arg enable_docking)">
        <link name="charger_link"/>
        <joint name="charger_to_base" type="fixed">
          <parent link="base_link" />
          <child link="charger_link" />
          <origin xyz="$(arg charge_receiver_xyz)" rpy="0.0 0.0 0.0"/>
        </joint>
    </xacro:if>


    <!-- Ground truth odometry for simulation -->
    <gazebo>
      <plugin filename="libgazebo_ros_p3d.so" name="ground_truth_odom">
        <updateRate>100.0</updateRate>
        <bodyName>base_link</bodyName>
        <topicName>/gazebo/odom</topicName>
        <gaussianNoise>0.0</gaussianNoise>
        <frameName>world</frameName>
      </plugin>
    </gazebo>
  </xacro:macro>
</robot>
